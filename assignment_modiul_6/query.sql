
--  Task -1  : Write a SQL query to retrieve all the customer information along with the total number of orders placed by each customer. Display the result in descending order of the number of orders.

    SELECT 
    c.customer_id, 
    c.name, c.email, 
    c.location, 
    COUNT(o.order_id) AS total_orders
    FROM Customers c
    LEFT JOIN Orders o ON c.customer_id = o.customer_id
    GROUP BY c.customer_id, c.name, c.email, c.location
    ORDER BY total_orders DESC;


--  Task -2  : Write a SQL query to retrieve the product name, quantity, and total amount for each order item. Display the result in ascending order of the order ID.

    SELECT p.name 
    AS product_name, 
    oi.quantity, (oi.quantity * oi.unit_price) AS total_amount
    FROM Order_Items oi
    JOIN Products p ON oi.product_id = p.product_id
    ORDER BY oi.order_id ASC;


--  Task -3  : Write a SQL query to retrieve the total revenue generated by each product category. Display the category name along with the total revenue in descending order of the revenue.

    SELECT c.name 
    AS category_name, 
    SUM(oi.quantity * oi.unit_price) AS total_revenue
    FROM Categories c
    JOIN Products p ON c.category_id = p.category_id
    JOIN Order_Items oi ON p.product_id = oi.product_id
    GROUP BY c.name
    ORDER BY total_revenue DESC;


--  Task -4  : Write a SQL query to retrieve the top 5 customers who have made the highest total purchase amount. Display the customer name along with the total purchase amount in descending order of the purchase amount.

    SELECT c.name 
    AS customer_name, 
    SUM(oi.quantity * oi.unit_price) 
    AS total_purchase_amount
    FROM Customers c
    JOIN Orders o ON c.customer_id = o.customer_id
    JOIN Order_Items oi ON o.order_id = oi.order_id
    GROUP BY c.name
    ORDER BY total_purchase_amount DESC
    LIMIT 5;
